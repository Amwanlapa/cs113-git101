week2 Types, Operators, and Expressions

1.การใช้งานตัวแปร 
ในภาษาซีนั้นต้องมีการประกาศตัวเเปรก่อนทุกครั้ง โดยมีหลักการตั้งชื่อตัวแเปรของภาษาซี 
- ชื่อตัวเเปรประกอบด้วยตัวอักขระเเละตัวเลข โดยที่ตัวเเรกของชื่อตัวเเปรต้องเป็นอักขระ
  ("_"หรือ underscore นับว่าเป็นอักขระเพราะฉะนั้น เป็นตัวเเรกของชื่อตัวเเปรได้)
-ชื่อตัวเเปรห้ามซ้ำกับคีย์เวิร์ดภาษาซี เช่น if, else, int
-ตัวอักษรพิมพ์เล็กกับพิมพ์ใหญ่ถือว่าต่างกัน
-มักจะใช้ตัวอักษรภาษาอังกฤษพิมพ์ใหญ่ทั้งหมดในการนิยามค่า symbolic constant
1.1การตั้งชื่อตัวเเปรควรให้อ่านเเล้วเข้าใจง่าย โดยมีรูปเเบบการตั้งดังนี้
  -snake_case:พิมพ์เล็กหมดคั่นด้วย("_") 
  -CamelCase:พิมพ์ใหญ่ตัวเเรก
  -camelCase:พิมพ์เล็ก-พิมพ์ใหญ่ตัวเเรก
2.ประเภทข้อมูลเเละขนาด
  -char = 1 ไบท์
  -int = 4 ไบท์
  -long = 4 ไบท์
  -long long = 8 ไบท์
  -float = 4 ไบท์
  -double = 8 ไบท์
  -void = 1 ไบท์ (ใช้ตอนไม่มีการส่งค่ากลับเเละใช้ในการกำหนดตัวเเปรที่ไม่มีประเภทข้อมูล)
  -short = ช่วยลดพื้นที่จัดเก็บ(ให้ตัวเเปรประเภทint)
  -long = ช่วยเพิ่มพื้นที่จัดเก็บข้อมูล(ให้ตัวเเปรประเภทint)
  -signed =ใช้กำหนดintให้สามารถเก็บค่าได้ทั้ง+เเละ-
  -unsigned =ใช้กำหนดintให้เก็บเฉพาะค่า+
  -sizeof = ตรวจสอบขนาดของตัวเเปรเเละประเภทข้อมูล
3.ค่าคงที่ 
-ค่าคงที่ของเลขฐาน
ฐาน8 : 0(ศูนย์) ตามด้วยเลขจำนวนเต็ม = %o,%O 
ฐาน16 : 0x หรือ 0X ตามด้วยเลขจำนวนเต็ม = %x,%X
ฐาน 2 : 0b หรือ 0B ตามด้วยเลขจำนวนเต็ม
-ค่าคงที่ของตัวอักษร
ตัวอักขระ ASCII สามารถเเปลงกลับไปกลับมากับเลขจำนวนเต็มได้ บางตัวอ้างถึงโดยใช้ escape sequences ใช้ ' ' ในการเขียน
-ค่าคงที่สตริง
 " " เป็นสตริงเปล่า 
 ทุกสตริงจะมี '\0' ต่อท้ายคือต้องจองที่เกินไว้ 1 ตัวเพื่อให้เก็บค่าได้ ex. "Hello world'\0'" 
 4.การประกาศตัวเเปร 
  ในภาษาซี ต้องถูกประกาศก่อนเรียกใช้งาน การประกาศเป็นการระบุประเภทข้อมูลให้กับตัวเเปร
 สามารถประกาศตัวเเปรโดยให้เป็นค่าคงที่ที่ไม่สามารถถูกเปลี่ยนค่าได้ตลอดการทำงานของโปรเเกรม
 ex. const int step = 20; (ค่านี้ก็จะคงที่เสมอ บวก/ลดไม่ได้เเล้ว)
 printf()ต่างกับputs() ตรงที่การขึ้นบรรทัด 
 printf() = จะต้องใส่\nในการขึ้นบรรทัดใหม่
 puts() = จะขึ้นบรรทัดใหม่ให้เองโดยไม่ต้องใส่\n 
  รูปเเบบการพิมพ์ (format) ของ printf()
-%d พิมพ์เลขจำนวนเต็ม
-%f พิมพ์เลขทศนิยม
-%c พิมพ์ตัวอักษร
-%s พิมพ์ข้อาความ
-%% พิมพ์ %
EOF เป็นค่าคงที่ที่บ่งบอกถึงจุดสิ้นสุดของข้อมูล
5.ตัวดำเนินการทางคณิตศาสตร์
  + - * / %
  % ไม่สามารถใช้กับ floatเเละdoubleได้ ex. 4%4.2 modไม่ได้
  + - เป็น unary operator ได้ด้วย
  หาก operator มีค่าเท่ากันต้องคิดจากซ้ายไปขวา
  int / int = int ที่ถูกปัดเศษทิ้ง
  int / float = float
  6.- Relational Operators 
  เครื่องหมายที่ใช้ในการเปรียบเทียบ > >= < <= == != 
  - Logical Operators
  && = and
  || = or
  !  = not
  ค่าที่ออกจะเป็น True กับ False
  7.Type Conversion
  การนำค่าของข้อมูลต่างๆ มาใช้งานผ่าน operator ร่วมกัน compiler จะเเปลงประเภทข้อมูลที่ narrow ไปยังประเภทข้อมูลที่ wider
  เพื่อไม่ให้สูญเสียข้อมูล ex. int + float เเปลงไปเป็น float + float
  float ไม่สามารถเรียกใช้ค่าindexได้ (ในอาเรย์)
  8.lncrement and Decrement Operators
  n++,n-- จะได้ค่าตอนที่ตีความ
  ++n,--n จะได้ค่าหลังจากที่ +,- เสร็จหมดเเล้ว
  9.Bitwise Operators
    0&1,0&0 = 0 , 1&1 = 1
    1|0,1|1 = 1 , 0|0 = 0
    ^ เหมือน0 ต่างกัน1
    not กลับบิตจาก1เป็น0
    << เลื่อนบิตไปทางซ้าย
    >> เลื่อนบิตไปทางขวา
  10.Assignment Operators
    c = getchar()
  11.Conditional Expressions
    expr1 ? expr2: expr3
    expr1 เป็นเงื่อนไขของการพิจารณา expr2 เเละ expr3
    expr2 จะเข้าเมื่อเป็นความจริง
    expr3 จะเข้าเมื่อเป็นเท็จ
    











